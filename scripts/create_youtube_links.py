def create_youtube_links():
    """Create YouTube links for each detected beep timing"""
    
    # Base YouTube URL
    base_url = "https://www.youtube.com/live/Z7sjETGD-dg?si=hC4x9fSoD071p2Xf&t="
    
    # Detected beep times in milliseconds (chronological order)
    beep_times_ms = [
        596712.29,
        2172332.65,
        2514753.74,
        2809888.17,
        2810388.94,
        3134747.56,
        3749998.83,
        3980693.05,
        4237967.73,
        5348835.74,
        5966657.38,
        6756737.58,
        7378768.71,
        7873669.24
    ]
    
    print("=" * 80)
    print("üé¨ YOUTUBE LINKS FOR JDL BEEP TIMINGS")
    print("=" * 80)
    print("üì∫ Video: JAPAN DRONE LEAGUE 2025 Round4 Semi Final & Final")
    print("üîó Base URL: https://www.youtube.com/live/Z7sjETGD-dg")
    print("=" * 80)
    
    links = []
    
    for i, time_ms in enumerate(beep_times_ms):
        # Convert milliseconds to seconds (YouTube uses seconds)
        time_seconds = int(time_ms / 1000)
        
        # Create YouTube link with timestamp
        youtube_link = f"{base_url}{time_seconds}"
        
        # Convert to readable time format
        total_seconds = time_ms / 1000
        minutes = int(total_seconds // 60)
        seconds = total_seconds % 60
        time_format = f"{minutes:2d}:{seconds:06.3f}"
        
        links.append({
            'beep_number': i + 1,
            'time_ms': time_ms,
            'time_seconds': time_seconds,
            'time_format': time_format,
            'youtube_link': youtube_link
        })
        
        print(f"Beep {i+1:2d}: {time_format} - {youtube_link}")
    
    # Save to file
    with open("JDL_YouTube_Links.txt", 'w') as f:
        f.write("JAPAN DRONE LEAGUE 2025 - YOUTUBE BEEP LINKS\n")
        f.write("=" * 60 + "\n\n")
        f.write("Video: JAPAN DRONE LEAGUE 2025 Round4 Semi Final & Final\n")
        f.write("Channel: https://www.youtube.com/live/Z7sjETGD-dg\n\n")
        f.write("BEEP TIMING LINKS:\n")
        f.write("-" * 60 + "\n")
        
        for link_data in links:
            f.write(f"Beep {link_data['beep_number']:2d}: {link_data['time_format']}\n")
            f.write(f"         {link_data['youtube_link']}\n\n")
        
        f.write("-" * 60 + "\n")
        f.write("Usage: Click any link to jump directly to the beep timing\n")
        f.write("Note: Times are automatically converted to seconds for YouTube\n")
    
    # Save as HTML for clickable links
    with open("JDL_YouTube_Links.html", 'w') as f:
        f.write("""<!DOCTYPE html>
<html>
<head>
    <title>JDL Beep Timing Links</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        h1 { color: #333; }
        .beep-link { margin: 10px 0; padding: 10px; background-color: #f5f5f5; border-radius: 5px; }
        .beep-number { font-weight: bold; color: #007bff; }
        .time { color: #666; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>üé¨ JAPAN DRONE LEAGUE 2025 - Beep Timing Links</h1>
    <p><strong>Video:</strong> JAPAN DRONE LEAGUE 2025 Round4 Semi Final & Final</p>
    <p><strong>Total Beeps:</strong> """ + str(len(links)) + """</p>
    <hr>
""")
        
        for link_data in links:
            f.write(f"""    <div class="beep-link">
        <span class="beep-number">Beep {link_data['beep_number']:2d}:</span> 
        <span class="time">{link_data['time_format']}</span><br>
        <a href="{link_data['youtube_link']}" target="_blank">{link_data['youtube_link']}</a>
    </div>
""")
        
        f.write("""    <hr>
    <p><em>Generated by JDL Beep Detector - Click any link to jump to the exact timing</em></p>
</body>
</html>""")
    
    # Save as CSV for easy import
    with open("JDL_YouTube_Links.csv", 'w') as f:
        f.write("Beep_Number,Time_Format,Time_Seconds,YouTube_Link\n")
        for link_data in links:
            f.write(f"{link_data['beep_number']},{link_data['time_format']},{link_data['time_seconds']},{link_data['youtube_link']}\n")
    
    print(f"\nüíæ Files created:")
    print(f"   üìÑ JDL_YouTube_Links.txt - Text format")
    print(f"   üåê JDL_YouTube_Links.html - Clickable web page")
    print(f"   üìä JDL_YouTube_Links.csv - Spreadsheet format")
    print(f"\n‚úÖ Created {len(links)} YouTube links with exact timing!")
    print(f"üéØ Links will jump directly to each beep timing in the video")

if __name__ == "__main__":
    create_youtube_links()